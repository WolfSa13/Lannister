service: mvp
useDotenv: true

provider:
  name: aws
  stage: dev
  region: us-east-1
  ecr:
    images:
      lambda-request-image:
        path: ./lambda_request_source/
      lambda-bonus-image:
        path: ./lambda_bonus_source/
      lambda-worker-image:
        path: ./lambda_worker_source/
      lambda-api_gateway-image:
        path: ./lambda_api_gateway_source/


functions:
  api_gateway-lambda:
    image:
      name: lambda-api_gateway-image
      environment:
        REGION: ${env:REGION}
        ACCOUNT: ${env:ACCOUNT}
        WORKER_LAMBDA: ${env:WORKER_LAMBDA}
        BONUS_LAMBDA: ${env:BONUS_LAMBDA}
        REQUEST_LAMBDA: ${env:REQUEST_LAMBDA}

  request-lambda:
    image:
      name: lambda-request-image
    environment:
      POSTGRES_USER: ${env:POSTGRES_USER}
      POSTGRES_PASSWORD: ${env:POSTGRES_PASSWORD}
      POSTGRES_HOST: ${env:POSTGRES_HOST}
      POSTGRES_PORT: ${env:POSTGRES_PORT}
      POSTGRES_DB: ${env:POSTGRES_DB}
      SLACK_BOT_TOKEN=: ${env:SLACK_BOT_TOKEN}

  worker-lambda:
    image:
      name: lambda-worker-image
    environment:
      POSTGRES_USER: ${env:POSTGRES_USER}
      POSTGRES_PASSWORD: ${env:POSTGRES_PASSWORD}
      POSTGRES_HOST: ${env:POSTGRES_HOST}
      POSTGRES_PORT: ${env:POSTGRES_PORT}
      POSTGRES_DB: ${env:POSTGRES_DB}
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}

  bonus-lambda:
    image:
      name: lambda-bonus-image
    environment:
      POSTGRES_USER: ${env:POSTGRES_USER}
      POSTGRES_PASSWORD: ${env:POSTGRES_PASSWORD}
      POSTGRES_HOST: ${env:POSTGRES_HOST}
      POSTGRES_PORT: ${env:POSTGRES_PORT}
      POSTGRES_DB: ${env:POSTGRES_DB}
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
